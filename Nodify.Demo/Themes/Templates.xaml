<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:shared="clr-namespace:Nodify;assembly=Nodify.Shared"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:core="clr-namespace:Nodify.Core;assembly=Nodify.Core"
                    xmlns:local="clr-namespace:Nodify.Demo"
                    xmlns:extra="clr-namespace:Nodify.Extra;assembly=Nodify.Extra"
                    xmlns:nodify="https://miroiu.github.io/nodify">

    <DataTemplate DataType="{x:Type core:MenuViewModel}">
        <Border Padding="7"
            CornerRadius="3"
            Background="{DynamicResource Node.BackgroundBrush}"
            BorderBrush="{StaticResource NodifyEditor.SelectionRectangleStrokeBrush}"
            BorderThickness="2"
            Visibility="{Binding IsVisible, Converter={shared:BooleanToVisibilityConverter}}">
            <ItemsControl Grid.Row="1" ItemsSource="{Binding Items}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type core:MenuItemViewModel}">
                        <Button Content="{Binding Content}"
                                Command="{Binding Command}"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Foreground="{DynamicResource ForegroundBrush}"
                                Padding="3"
                                Cursor="Hand"
                                HorizontalContentAlignment="Left">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Name="Border"
                                                        Background="{TemplateBinding Background}"
                                                        Padding="{TemplateBinding Padding}">
                                                    <ContentPresenter />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver"
                                                             Value="True">
                                                        <Setter Property="Background"
                                                                TargetName="Border"
                                                                Value="{DynamicResource NodeInput.BorderBrush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>
    </DataTemplate>


    <DataTemplate DataType="{x:Type extra:TabsViewModel}">
        <shared:TabControlEx ItemsSource="{Binding Tabs}"
                             SelectedItem="{Binding SelectedEditor}" 
                             AddTabCommand="{Binding AddEditorCommand}"
                             AutoScrollToEnd="{Binding AutoSelectNewEditor}">
            <shared:TabControlEx.ItemContainerStyle>
                <Style TargetType="{x:Type shared:TabItemEx}" 
                       BasedOn="{StaticResource {x:Type shared:TabItemEx}}">
                    <Setter Property="Header" 
                            Value="{Binding Name}"/>
                    <Setter Property="CloseTabCommand" 
                            Value="{Binding CloseCommand}"/>
                    <Setter Property="CloseTabCommandParameter" 
                            Value="{Binding Id}"/>
                </Style>
            </shared:TabControlEx.ItemContainerStyle>
        </shared:TabControlEx>
    </DataTemplate>

    <DataTemplate DataType="{x:Type extra:TabViewModel}">
        <ContentControl Content="{Binding Content}"/>
    </DataTemplate>

    <DataTemplate x:Key="ConnectionTemplate"
                      DataType="{x:Type core:ConnectionViewModel}">
        <nodify:CircuitConnection Source="{Binding Output.Anchor}"
                                      Target="{Binding Input.Anchor}"
                                      SourceOffset="10 0"
                                      TargetOffset="20 0"
                                      SourceOffsetMode="Circle" />
    </DataTemplate>

    <DataTemplate x:Key="PendingConnectionTemplate"
                      DataType="{x:Type core:PendingConnectionViewModel}">
        <nodify:PendingConnection IsVisible="{Binding IsVisible}"
                                      Source="{Binding Source, Mode=OneWayToSource}"
                                      Target="{Binding Target, Mode=OneWayToSource}"
                                      TargetAnchor="{Binding TargetLocation, Mode=OneWayToSource}"
                                      StartedCommand="{Binding DataContext.StartConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}"
                                      CompletedCommand="{Binding DataContext.CreateConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MainViewModel}">
        <DockPanel   Background="{DynamicResource NodifyEditor.BackgroundBrush}">
            <Button DockPanel.Dock="Top" Command="{Binding ReloadCommand}">Reload</Button>
            <!--<ContentControl Content="{Binding MessagesViewModel}" DockPanel.Dock="Right"></ContentControl>-->
            <!--<ContentControl Content="{Binding DiagramsViewModel}"></ContentControl>-->
            <ContentControl Content="{Binding InterfaceViewModel}" DockPanel.Dock="Bottom"></ContentControl>
            <!--<ContentControl Content="{Binding TabsViewModel}"></ContentControl>-->
        </DockPanel>


    </DataTemplate>
    <!--<DataTemplate DataType="{x:Type local:ExpandoOperationViewModel}">
                    <nodify:Node Header="{Binding Title}"
                                 Content="{Binding}"
                                 Input="{Binding Input}"
                                 Output="{Binding Output, Converter={StaticResource ItemToListConverter}}">
                        <nodify:Node.ContentTemplate>
                            <DataTemplate DataType="{x:Type local:ExpandoOperationViewModel}">
                                <StackPanel>
                                    <Button Style="{StaticResource IconButton}"
                                            Content="{StaticResource PlusIcon}"
                                            Command="{Binding AddInputCommand}" />
                                    <Button Style="{StaticResource IconButton}"
                                            Content="{StaticResource RemoveKeyIcon}"
                                            Command="{Binding RemoveInputCommand}" />
                                </StackPanel>
                            </DataTemplate>
                        </nodify:Node.ContentTemplate>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:ExpressionOperationViewModel}">
                    <nodify:Node Content="{Binding}"
                                 Input="{Binding Input}"
                                 Output="{Binding Output, Converter={StaticResource ItemToListConverter}}">
                        <nodify:Node.ContentTemplate>
                            <DataTemplate DataType="{x:Type local:ExpressionOperationViewModel}">
                                <TextBox Text="{Binding Expression}"
                                         MinWidth="100"
                                         Margin="5 0 0 0" />
                            </DataTemplate>
                        </nodify:Node.ContentTemplate>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:CalculatorOperationViewModel}">
                    <nodify:Node Header="{Binding Title}"
                                 Input="{Binding Input}"
                                 Output="{Binding Output, Converter={StaticResource ItemToListConverter}}"
                                 ToolTip="Double click to expand">
                        <nodify:Node.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick"
                                          Command="{Binding DataContext.OpenCalculatorCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                          CommandParameter="{Binding InnerCalculator}" />
                        </nodify:Node.InputBindings>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:CalculatorInputOperationViewModel}">
                    <DataTemplate.Resources>
                        <Style TargetType="{x:Type nodify:NodeOutput}"
                               BasedOn="{StaticResource {x:Type nodify:NodeOutput}}">
                            <Setter Property="Header"
                                    Value="{Binding}" />
                            <Setter Property="IsConnected"
                                    Value="{Binding IsConnected}" />
                            <Setter Property="Anchor"
                                    Value="{Binding Anchor, Mode=OneWayToSource}" />
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox Text="{Binding Value}"
                                                     IsEnabled="False" />
                                            <TextBlock Text="{Binding Title}"
                                                       Margin="5 0 0 0" />
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataTemplate.Resources>
                    <nodify:Node Header="{Binding Title}"
                                 Output="{Binding Output}">
                        <StackPanel>
                            <Button Style="{StaticResource IconButton}"
                                    Content="{StaticResource PlusIcon}"
                                    Command="{Binding AddOutputCommand}" />
                            <Button Style="{StaticResource IconButton}"
                                    Content="{StaticResource RemoveKeyIcon}"
                                    Command="{Binding RemoveOutputCommand}" />
                        </StackPanel>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:OperationGroupViewModel}">
                    <nodify:GroupingNode Header="{Binding Title}"
                                         ActualSize="{Binding GroupSize, Mode=TwoWay}" />
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:OperationGraphViewModel}">
                    <nodify:GroupingNode Header="{Binding}"
                                         CanResize="{Binding IsExpanded}"
                                         ActualSize="{Binding DesiredSize, Mode=TwoWay}"
                                         MovementMode="Self">
                        <nodify:GroupingNode.HeaderTemplate>
                            <DataTemplate DataType="{x:Type local:OperationGraphViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{Binding Title}" />
                                    <StackPanel Orientation="Horizontal"
                                                Margin="5 0 0 0"
                                                Grid.Column="1">
                                        <TextBlock Text="Expand?"
                                                   Visibility="{Binding IsExpanded, Converter={shared:BooleanToVisibilityConverter}}"
                                                   Margin="0 0 5 0" />
                                        <CheckBox IsChecked="{Binding IsExpanded}" />
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </nodify:GroupingNode.HeaderTemplate>
                        <Grid>
                            <nodify:NodifyEditor Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}"
                                                 DataContext="{Binding InnerCalculator}"
                                                 ItemsSource="{Binding Operations}"
                                                 Connections="{Binding Connections}"
                                                 SelectedItems="{Binding SelectedOperations}"
                                                 DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                                                 PendingConnection="{Binding PendingConnection}"
                                                 PendingConnectionTemplate="{StaticResource PendingConnectionTemplate}"
                                                 ConnectionTemplate="{StaticResource ConnectionTemplate}"
                                                 ItemContainerStyle="{StaticResource ItemContainerStyle}"
                                                 Background="Transparent"
                                                 GridCellSize="15"
                                                 Visibility="{Binding DataContext.IsExpanded, RelativeSource={RelativeSource AncestorType=nodify:GroupingNode}, Converter={shared:BooleanToVisibilityConverter}}">

                                <nodify:NodifyEditor.InputBindings>
                                    <KeyBinding Key="Delete"
                                                Command="{Binding DeleteSelectionCommand}" />
                                    <KeyBinding Key="C"
                                                Command="{Binding GroupSelectionCommand}" />
                                </nodify:NodifyEditor.InputBindings>

                                <CompositeCollection>
                                    <nodify:DecoratorContainer DataContext="{Binding OperationsMenu}"
                                                               Location="{Binding Location}">
                                        <local:OperationsMenuView />
                                    </nodify:DecoratorContainer>
                                </CompositeCollection>
                            </nodify:NodifyEditor>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ItemsControl ItemsSource="{Binding Input}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <nodify:NodeInput />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <nodify:NodeOutput DataContext="{Binding Output}"
                                                   Grid.Column="1"
                                                   VerticalAlignment="Top"
                                                   HorizontalAlignment="Right" />
                            </Grid>
                        </Grid>
                    </nodify:GroupingNode>
                </DataTemplate>-->

</ResourceDictionary>